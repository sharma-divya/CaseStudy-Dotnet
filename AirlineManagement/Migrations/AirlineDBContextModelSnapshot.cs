// <auto-generated />
using System;
using AirlineManagement.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirlineManagement.Migrations
{
    [DbContext(typeof(AirlineDBContext))]
    partial class AirlineDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CommonService.Models.AirlineDetails", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirlineName");

                    b.Property<string>("ContactAddress");

                    b.Property<string>("ContactNumber");

                    b.Property<double?>("DiscountAmount");

                    b.Property<string>("DiscountCode");

                    b.Property<string>("Logo");

                    b.Property<int?>("Status");

                    b.HasKey("AirlineId");

                    b.ToTable("AirlineDetails");
                });

            modelBuilder.Entity("CommonService.Models.FlightDetails", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId");

                    b.Property<int>("BusinessClassSeats");

                    b.Property<DateTime?>("EndDateTime");

                    b.Property<string>("FlightNo");

                    b.Property<string>("InstrumentUsed");

                    b.Property<string>("Meal");

                    b.Property<int>("NonBusinessClassSeats");

                    b.Property<string>("PlaceFrom");

                    b.Property<string>("PlaceTo");

                    b.Property<int>("Rows");

                    b.Property<string>("ScheduleDays");

                    b.Property<DateTime?>("StartDateTime");

                    b.Property<double>("TicketPrice");

                    b.HasKey("FlightId");

                    b.HasIndex("AirlineId");

                    b.ToTable("FlightDetails");
                });

            modelBuilder.Entity("CommonService.Models.FlightDetails", b =>
                {
                    b.HasOne("CommonService.Models.AirlineDetails", "Airlines")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
